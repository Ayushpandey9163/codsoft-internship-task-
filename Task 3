//Tic-Tac-Toe Game
#include <iostream>
#include <vector>

using namespace std;

const int SIZE = 3;
vector<vector<char>> board(SIZE, vector<char>(SIZE, ' '));

void displayBoard() {
    cout << "\n";
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            cout << board[i][j];
            if (j < SIZE - 1) cout << " | ";
        }
        cout << "\n";
        if (i < SIZE - 1) cout << "--|---|--\n";
    }
    cout << "\n";
}

bool isWin(char player) {
    // Check rows
    for (int i = 0; i < SIZE; ++i) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return true;
        }
    }
    // Check columns
    for (int i = 0; i < SIZE; ++i) {
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
            return true;
        }
    }
    // Check diagonals
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        return true;
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        return true;
    }
    return false;
}

bool isDraw() {
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            if (board[i][j] == ' ') {
                return false;
            }
        }
    }
    return true;
}

void switchPlayer(char &currentPlayer) {
    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
}

void resetBoard() {
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            board[i][j] = ' ';
        }
    }
}

int main() {
    char currentPlayer = 'X';
    bool playAgain = true;

    while (playAgain) {
        resetBoard();
        displayBoard();
        bool gameEnd = false;

        while (!gameEnd) {
            int row, col;
            cout << "Player " << currentPlayer << ", enter your move (row and column): ";
            cin >> row >> col;

            if (row < 1 || row > SIZE || col < 1 || col > SIZE || board[row - 1][col - 1] != ' ') {
                cout << "Invalid move. Try again.\n";
                continue;
            }

            board[row - 1][col - 1] = currentPlayer;
            displayBoard();

            if (isWin(currentPlayer)) {
                cout << "Player " << currentPlayer << " wins!\n";
                gameEnd = true;
            } else if (isDraw()) {
                cout << "The game is a draw!\n";
                gameEnd = true;
            } else {
                switchPlayer(currentPlayer);
            }
        }

        char response;
        cout << "Do you want to play again? (y/n): ";
        cin >> response;
        playAgain = (response == 'y' || response == 'Y');
    }

    return 0;
}
